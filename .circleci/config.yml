version: 2
jobs:
  build:
    docker:
      - image: ruby:2.7.1-alpine
        environment:
          RDB_URL_BASE: postgres://postgres:@localhost
          REDIS_URL: redis://localhost:6379
      - image: postgres:9.5-alpine
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:4.0-alpine
    working_directory: /work
    steps:
      - run:
          name: Install System Dependencies
          command: |
            # See also https://circleci.com/docs/2.0/custom-images/#adding-required-and-custom-tools-or-files
            apk add --update-cache --no-cache git openssh-client tar gzip ca-certificates \
              build-base postgresql-dev postgresql-libs nodejs tzdata
      - checkout
      - restore_cache:
          name: Restore bundler cache
          keys:
            - gems-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "Gemfile.lock" }}
            - gems-{{ .Environment.COMMON_CACHE_KEY }}-
      - run:
          name: Install Ruby Dependencies
          command: |
            bundle check || bundle install --jobs=4 --retry=3 --path=vendor/bundle
            bundle clean
      - save_cache:
          name: Save bundler cache
          key: gems-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "Gemfile.lock" }}
          paths:
            - /work/vendor/bundle
      - run:
          name: Create DB
          command: bundle exec rake db:create db:schema:load --trace
      - run:
          name: Run Rails Best Practices
          command: bundle exec rails_best_practices .
      - run:
          name: Run RuboCop
          command: bundle exec rubocop
      - run:
          name: Run Tests
          command: bundle exec rspec --format progress --format RspecJunitFormatter -o test-reports/junit.xml
      - store_test_results:
          path: test-reports/
